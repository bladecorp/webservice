package com.proyecto.tesisws.modelos;

import java.util.ArrayList;
import java.util.List;

public class LlavesExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table llaves
     *
     * @mbggenerated Sat Aug 01 13:17:37 CDT 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table llaves
     *
     * @mbggenerated Sat Aug 01 13:17:37 CDT 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table llaves
     *
     * @mbggenerated Sat Aug 01 13:17:37 CDT 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table llaves
     *
     * @mbggenerated Sat Aug 01 13:17:37 CDT 2015
     */
    public LlavesExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table llaves
     *
     * @mbggenerated Sat Aug 01 13:17:37 CDT 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table llaves
     *
     * @mbggenerated Sat Aug 01 13:17:37 CDT 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table llaves
     *
     * @mbggenerated Sat Aug 01 13:17:37 CDT 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table llaves
     *
     * @mbggenerated Sat Aug 01 13:17:37 CDT 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table llaves
     *
     * @mbggenerated Sat Aug 01 13:17:37 CDT 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table llaves
     *
     * @mbggenerated Sat Aug 01 13:17:37 CDT 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table llaves
     *
     * @mbggenerated Sat Aug 01 13:17:37 CDT 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table llaves
     *
     * @mbggenerated Sat Aug 01 13:17:37 CDT 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table llaves
     *
     * @mbggenerated Sat Aug 01 13:17:37 CDT 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table llaves
     *
     * @mbggenerated Sat Aug 01 13:17:37 CDT 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table llaves
     *
     * @mbggenerated Sat Aug 01 13:17:37 CDT 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdTipoLlaveIsNull() {
            addCriterion("idTipoLlave is null");
            return (Criteria) this;
        }

        public Criteria andIdTipoLlaveIsNotNull() {
            addCriterion("idTipoLlave is not null");
            return (Criteria) this;
        }

        public Criteria andIdTipoLlaveEqualTo(Integer value) {
            addCriterion("idTipoLlave =", value, "idTipoLlave");
            return (Criteria) this;
        }

        public Criteria andIdTipoLlaveNotEqualTo(Integer value) {
            addCriterion("idTipoLlave <>", value, "idTipoLlave");
            return (Criteria) this;
        }

        public Criteria andIdTipoLlaveGreaterThan(Integer value) {
            addCriterion("idTipoLlave >", value, "idTipoLlave");
            return (Criteria) this;
        }

        public Criteria andIdTipoLlaveGreaterThanOrEqualTo(Integer value) {
            addCriterion("idTipoLlave >=", value, "idTipoLlave");
            return (Criteria) this;
        }

        public Criteria andIdTipoLlaveLessThan(Integer value) {
            addCriterion("idTipoLlave <", value, "idTipoLlave");
            return (Criteria) this;
        }

        public Criteria andIdTipoLlaveLessThanOrEqualTo(Integer value) {
            addCriterion("idTipoLlave <=", value, "idTipoLlave");
            return (Criteria) this;
        }

        public Criteria andIdTipoLlaveIn(List<Integer> values) {
            addCriterion("idTipoLlave in", values, "idTipoLlave");
            return (Criteria) this;
        }

        public Criteria andIdTipoLlaveNotIn(List<Integer> values) {
            addCriterion("idTipoLlave not in", values, "idTipoLlave");
            return (Criteria) this;
        }

        public Criteria andIdTipoLlaveBetween(Integer value1, Integer value2) {
            addCriterion("idTipoLlave between", value1, value2, "idTipoLlave");
            return (Criteria) this;
        }

        public Criteria andIdTipoLlaveNotBetween(Integer value1, Integer value2) {
            addCriterion("idTipoLlave not between", value1, value2, "idTipoLlave");
            return (Criteria) this;
        }

        public Criteria andIdVehiculoIsNull() {
            addCriterion("idVehiculo is null");
            return (Criteria) this;
        }

        public Criteria andIdVehiculoIsNotNull() {
            addCriterion("idVehiculo is not null");
            return (Criteria) this;
        }

        public Criteria andIdVehiculoEqualTo(Integer value) {
            addCriterion("idVehiculo =", value, "idVehiculo");
            return (Criteria) this;
        }

        public Criteria andIdVehiculoNotEqualTo(Integer value) {
            addCriterion("idVehiculo <>", value, "idVehiculo");
            return (Criteria) this;
        }

        public Criteria andIdVehiculoGreaterThan(Integer value) {
            addCriterion("idVehiculo >", value, "idVehiculo");
            return (Criteria) this;
        }

        public Criteria andIdVehiculoGreaterThanOrEqualTo(Integer value) {
            addCriterion("idVehiculo >=", value, "idVehiculo");
            return (Criteria) this;
        }

        public Criteria andIdVehiculoLessThan(Integer value) {
            addCriterion("idVehiculo <", value, "idVehiculo");
            return (Criteria) this;
        }

        public Criteria andIdVehiculoLessThanOrEqualTo(Integer value) {
            addCriterion("idVehiculo <=", value, "idVehiculo");
            return (Criteria) this;
        }

        public Criteria andIdVehiculoIn(List<Integer> values) {
            addCriterion("idVehiculo in", values, "idVehiculo");
            return (Criteria) this;
        }

        public Criteria andIdVehiculoNotIn(List<Integer> values) {
            addCriterion("idVehiculo not in", values, "idVehiculo");
            return (Criteria) this;
        }

        public Criteria andIdVehiculoBetween(Integer value1, Integer value2) {
            addCriterion("idVehiculo between", value1, value2, "idVehiculo");
            return (Criteria) this;
        }

        public Criteria andIdVehiculoNotBetween(Integer value1, Integer value2) {
            addCriterion("idVehiculo not between", value1, value2, "idVehiculo");
            return (Criteria) this;
        }

        public Criteria andCodigoIsNull() {
            addCriterion("codigo is null");
            return (Criteria) this;
        }

        public Criteria andCodigoIsNotNull() {
            addCriterion("codigo is not null");
            return (Criteria) this;
        }

        public Criteria andCodigoEqualTo(String value) {
            addCriterion("codigo =", value, "codigo");
            return (Criteria) this;
        }

        public Criteria andCodigoNotEqualTo(String value) {
            addCriterion("codigo <>", value, "codigo");
            return (Criteria) this;
        }

        public Criteria andCodigoGreaterThan(String value) {
            addCriterion("codigo >", value, "codigo");
            return (Criteria) this;
        }

        public Criteria andCodigoGreaterThanOrEqualTo(String value) {
            addCriterion("codigo >=", value, "codigo");
            return (Criteria) this;
        }

        public Criteria andCodigoLessThan(String value) {
            addCriterion("codigo <", value, "codigo");
            return (Criteria) this;
        }

        public Criteria andCodigoLessThanOrEqualTo(String value) {
            addCriterion("codigo <=", value, "codigo");
            return (Criteria) this;
        }

        public Criteria andCodigoLike(String value) {
            addCriterion("codigo like", value, "codigo");
            return (Criteria) this;
        }

        public Criteria andCodigoNotLike(String value) {
            addCriterion("codigo not like", value, "codigo");
            return (Criteria) this;
        }

        public Criteria andCodigoIn(List<String> values) {
            addCriterion("codigo in", values, "codigo");
            return (Criteria) this;
        }

        public Criteria andCodigoNotIn(List<String> values) {
            addCriterion("codigo not in", values, "codigo");
            return (Criteria) this;
        }

        public Criteria andCodigoBetween(String value1, String value2) {
            addCriterion("codigo between", value1, value2, "codigo");
            return (Criteria) this;
        }

        public Criteria andCodigoNotBetween(String value1, String value2) {
            addCriterion("codigo not between", value1, value2, "codigo");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table llaves
     *
     * @mbggenerated do_not_delete_during_merge Sat Aug 01 13:17:37 CDT 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table llaves
     *
     * @mbggenerated Sat Aug 01 13:17:37 CDT 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value) {
            super();
            this.condition = condition;
            this.value = value;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.betweenValue = true;
        }
    }
}