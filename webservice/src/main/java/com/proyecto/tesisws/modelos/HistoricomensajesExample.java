package com.proyecto.tesisws.modelos;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class HistoricomensajesExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table historicomensajes
     *
     * @mbggenerated Thu Aug 20 18:16:58 CDT 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table historicomensajes
     *
     * @mbggenerated Thu Aug 20 18:16:58 CDT 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table historicomensajes
     *
     * @mbggenerated Thu Aug 20 18:16:58 CDT 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table historicomensajes
     *
     * @mbggenerated Thu Aug 20 18:16:58 CDT 2015
     */
    public HistoricomensajesExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table historicomensajes
     *
     * @mbggenerated Thu Aug 20 18:16:58 CDT 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table historicomensajes
     *
     * @mbggenerated Thu Aug 20 18:16:58 CDT 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table historicomensajes
     *
     * @mbggenerated Thu Aug 20 18:16:58 CDT 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table historicomensajes
     *
     * @mbggenerated Thu Aug 20 18:16:58 CDT 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table historicomensajes
     *
     * @mbggenerated Thu Aug 20 18:16:58 CDT 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table historicomensajes
     *
     * @mbggenerated Thu Aug 20 18:16:58 CDT 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table historicomensajes
     *
     * @mbggenerated Thu Aug 20 18:16:58 CDT 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table historicomensajes
     *
     * @mbggenerated Thu Aug 20 18:16:58 CDT 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table historicomensajes
     *
     * @mbggenerated Thu Aug 20 18:16:58 CDT 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table historicomensajes
     *
     * @mbggenerated Thu Aug 20 18:16:58 CDT 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table historicomensajes
     *
     * @mbggenerated Thu Aug 20 18:16:58 CDT 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andMensajeIsNull() {
            addCriterion("mensaje is null");
            return (Criteria) this;
        }

        public Criteria andMensajeIsNotNull() {
            addCriterion("mensaje is not null");
            return (Criteria) this;
        }

        public Criteria andMensajeEqualTo(String value) {
            addCriterion("mensaje =", value, "mensaje");
            return (Criteria) this;
        }

        public Criteria andMensajeNotEqualTo(String value) {
            addCriterion("mensaje <>", value, "mensaje");
            return (Criteria) this;
        }

        public Criteria andMensajeGreaterThan(String value) {
            addCriterion("mensaje >", value, "mensaje");
            return (Criteria) this;
        }

        public Criteria andMensajeGreaterThanOrEqualTo(String value) {
            addCriterion("mensaje >=", value, "mensaje");
            return (Criteria) this;
        }

        public Criteria andMensajeLessThan(String value) {
            addCriterion("mensaje <", value, "mensaje");
            return (Criteria) this;
        }

        public Criteria andMensajeLessThanOrEqualTo(String value) {
            addCriterion("mensaje <=", value, "mensaje");
            return (Criteria) this;
        }

        public Criteria andMensajeLike(String value) {
            addCriterion("mensaje like", value, "mensaje");
            return (Criteria) this;
        }

        public Criteria andMensajeNotLike(String value) {
            addCriterion("mensaje not like", value, "mensaje");
            return (Criteria) this;
        }

        public Criteria andMensajeIn(List<String> values) {
            addCriterion("mensaje in", values, "mensaje");
            return (Criteria) this;
        }

        public Criteria andMensajeNotIn(List<String> values) {
            addCriterion("mensaje not in", values, "mensaje");
            return (Criteria) this;
        }

        public Criteria andMensajeBetween(String value1, String value2) {
            addCriterion("mensaje between", value1, value2, "mensaje");
            return (Criteria) this;
        }

        public Criteria andMensajeNotBetween(String value1, String value2) {
            addCriterion("mensaje not between", value1, value2, "mensaje");
            return (Criteria) this;
        }

        public Criteria andIdTipoMensajeIsNull() {
            addCriterion("idTipoMensaje is null");
            return (Criteria) this;
        }

        public Criteria andIdTipoMensajeIsNotNull() {
            addCriterion("idTipoMensaje is not null");
            return (Criteria) this;
        }

        public Criteria andIdTipoMensajeEqualTo(Integer value) {
            addCriterion("idTipoMensaje =", value, "idTipoMensaje");
            return (Criteria) this;
        }

        public Criteria andIdTipoMensajeNotEqualTo(Integer value) {
            addCriterion("idTipoMensaje <>", value, "idTipoMensaje");
            return (Criteria) this;
        }

        public Criteria andIdTipoMensajeGreaterThan(Integer value) {
            addCriterion("idTipoMensaje >", value, "idTipoMensaje");
            return (Criteria) this;
        }

        public Criteria andIdTipoMensajeGreaterThanOrEqualTo(Integer value) {
            addCriterion("idTipoMensaje >=", value, "idTipoMensaje");
            return (Criteria) this;
        }

        public Criteria andIdTipoMensajeLessThan(Integer value) {
            addCriterion("idTipoMensaje <", value, "idTipoMensaje");
            return (Criteria) this;
        }

        public Criteria andIdTipoMensajeLessThanOrEqualTo(Integer value) {
            addCriterion("idTipoMensaje <=", value, "idTipoMensaje");
            return (Criteria) this;
        }

        public Criteria andIdTipoMensajeIn(List<Integer> values) {
            addCriterion("idTipoMensaje in", values, "idTipoMensaje");
            return (Criteria) this;
        }

        public Criteria andIdTipoMensajeNotIn(List<Integer> values) {
            addCriterion("idTipoMensaje not in", values, "idTipoMensaje");
            return (Criteria) this;
        }

        public Criteria andIdTipoMensajeBetween(Integer value1, Integer value2) {
            addCriterion("idTipoMensaje between", value1, value2, "idTipoMensaje");
            return (Criteria) this;
        }

        public Criteria andIdTipoMensajeNotBetween(Integer value1, Integer value2) {
            addCriterion("idTipoMensaje not between", value1, value2, "idTipoMensaje");
            return (Criteria) this;
        }

        public Criteria andIdSubMensajeIsNull() {
            addCriterion("idSubMensaje is null");
            return (Criteria) this;
        }

        public Criteria andIdSubMensajeIsNotNull() {
            addCriterion("idSubMensaje is not null");
            return (Criteria) this;
        }

        public Criteria andIdSubMensajeEqualTo(Integer value) {
            addCriterion("idSubMensaje =", value, "idSubMensaje");
            return (Criteria) this;
        }

        public Criteria andIdSubMensajeNotEqualTo(Integer value) {
            addCriterion("idSubMensaje <>", value, "idSubMensaje");
            return (Criteria) this;
        }

        public Criteria andIdSubMensajeGreaterThan(Integer value) {
            addCriterion("idSubMensaje >", value, "idSubMensaje");
            return (Criteria) this;
        }

        public Criteria andIdSubMensajeGreaterThanOrEqualTo(Integer value) {
            addCriterion("idSubMensaje >=", value, "idSubMensaje");
            return (Criteria) this;
        }

        public Criteria andIdSubMensajeLessThan(Integer value) {
            addCriterion("idSubMensaje <", value, "idSubMensaje");
            return (Criteria) this;
        }

        public Criteria andIdSubMensajeLessThanOrEqualTo(Integer value) {
            addCriterion("idSubMensaje <=", value, "idSubMensaje");
            return (Criteria) this;
        }

        public Criteria andIdSubMensajeIn(List<Integer> values) {
            addCriterion("idSubMensaje in", values, "idSubMensaje");
            return (Criteria) this;
        }

        public Criteria andIdSubMensajeNotIn(List<Integer> values) {
            addCriterion("idSubMensaje not in", values, "idSubMensaje");
            return (Criteria) this;
        }

        public Criteria andIdSubMensajeBetween(Integer value1, Integer value2) {
            addCriterion("idSubMensaje between", value1, value2, "idSubMensaje");
            return (Criteria) this;
        }

        public Criteria andIdSubMensajeNotBetween(Integer value1, Integer value2) {
            addCriterion("idSubMensaje not between", value1, value2, "idSubMensaje");
            return (Criteria) this;
        }

        public Criteria andFechaIsNull() {
            addCriterion("fecha is null");
            return (Criteria) this;
        }

        public Criteria andFechaIsNotNull() {
            addCriterion("fecha is not null");
            return (Criteria) this;
        }

        public Criteria andFechaEqualTo(Date value) {
            addCriterion("fecha =", value, "fecha");
            return (Criteria) this;
        }

        public Criteria andFechaNotEqualTo(Date value) {
            addCriterion("fecha <>", value, "fecha");
            return (Criteria) this;
        }

        public Criteria andFechaGreaterThan(Date value) {
            addCriterion("fecha >", value, "fecha");
            return (Criteria) this;
        }

        public Criteria andFechaGreaterThanOrEqualTo(Date value) {
            addCriterion("fecha >=", value, "fecha");
            return (Criteria) this;
        }

        public Criteria andFechaLessThan(Date value) {
            addCriterion("fecha <", value, "fecha");
            return (Criteria) this;
        }

        public Criteria andFechaLessThanOrEqualTo(Date value) {
            addCriterion("fecha <=", value, "fecha");
            return (Criteria) this;
        }

        public Criteria andFechaIn(List<Date> values) {
            addCriterion("fecha in", values, "fecha");
            return (Criteria) this;
        }

        public Criteria andFechaNotIn(List<Date> values) {
            addCriterion("fecha not in", values, "fecha");
            return (Criteria) this;
        }

        public Criteria andFechaBetween(Date value1, Date value2) {
            addCriterion("fecha between", value1, value2, "fecha");
            return (Criteria) this;
        }

        public Criteria andFechaNotBetween(Date value1, Date value2) {
            addCriterion("fecha not between", value1, value2, "fecha");
            return (Criteria) this;
        }

        public Criteria andIdVehiculoIsNull() {
            addCriterion("idVehiculo is null");
            return (Criteria) this;
        }

        public Criteria andIdVehiculoIsNotNull() {
            addCriterion("idVehiculo is not null");
            return (Criteria) this;
        }

        public Criteria andIdVehiculoEqualTo(Integer value) {
            addCriterion("idVehiculo =", value, "idVehiculo");
            return (Criteria) this;
        }

        public Criteria andIdVehiculoNotEqualTo(Integer value) {
            addCriterion("idVehiculo <>", value, "idVehiculo");
            return (Criteria) this;
        }

        public Criteria andIdVehiculoGreaterThan(Integer value) {
            addCriterion("idVehiculo >", value, "idVehiculo");
            return (Criteria) this;
        }

        public Criteria andIdVehiculoGreaterThanOrEqualTo(Integer value) {
            addCriterion("idVehiculo >=", value, "idVehiculo");
            return (Criteria) this;
        }

        public Criteria andIdVehiculoLessThan(Integer value) {
            addCriterion("idVehiculo <", value, "idVehiculo");
            return (Criteria) this;
        }

        public Criteria andIdVehiculoLessThanOrEqualTo(Integer value) {
            addCriterion("idVehiculo <=", value, "idVehiculo");
            return (Criteria) this;
        }

        public Criteria andIdVehiculoIn(List<Integer> values) {
            addCriterion("idVehiculo in", values, "idVehiculo");
            return (Criteria) this;
        }

        public Criteria andIdVehiculoNotIn(List<Integer> values) {
            addCriterion("idVehiculo not in", values, "idVehiculo");
            return (Criteria) this;
        }

        public Criteria andIdVehiculoBetween(Integer value1, Integer value2) {
            addCriterion("idVehiculo between", value1, value2, "idVehiculo");
            return (Criteria) this;
        }

        public Criteria andIdVehiculoNotBetween(Integer value1, Integer value2) {
            addCriterion("idVehiculo not between", value1, value2, "idVehiculo");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table historicomensajes
     *
     * @mbggenerated do_not_delete_during_merge Thu Aug 20 18:16:58 CDT 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table historicomensajes
     *
     * @mbggenerated Thu Aug 20 18:16:58 CDT 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value) {
            super();
            this.condition = condition;
            this.value = value;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.betweenValue = true;
        }
    }
}